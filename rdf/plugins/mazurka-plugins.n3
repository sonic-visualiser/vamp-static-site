@prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .
@prefix vamp:     <http://purl.org/ontology/vamp/> .
@prefix plugbase: <http://vamp-plugins.org/rdf/plugins/mazurka-plugins#> .
@prefix owl:      <http://www.w3.org/2002/07/owl#> .
@prefix dc:       <http://purl.org/dc/elements/1.1/> .
@prefix af:       <http://purl.org/ontology/af/> .
@prefix foaf:     <http://xmlns.com/foaf/0.1/> .
@prefix cc:       <http://web.resource.org/cc/> .
@prefix :         <#> .

<>  a   vamp:PluginDescription ;
    foaf:maker          <http://www.vamp-plugins.org/doap.rdf#template-generator> ;
    foaf:primaryTopic   <http://vamp-plugins.org/rdf/plugins/mazurka-plugins> .

:mazurka-plugins a  vamp:PluginLibrary ;
    vamp:identifier "mazurka-plugins"  ; 
    vamp:available_plugin plugbase:mzchronogram ; 
    vamp:available_plugin plugbase:mzharmonicspectrum ; 
    vamp:available_plugin plugbase:mznevermore ; 
    vamp:available_plugin plugbase:mzpowercurve ; 
    vamp:available_plugin plugbase:mzspectralflux ; 
    vamp:available_plugin plugbase:mzspectralreflux ; 
#   foaf:page <Place more-information HTML page URL here and uncomment> ;
    .

plugbase:mzchronogram a   vamp:Plugin ;
    dc:title              "Chronogram" ;
    vamp:name             "Chronogram" ;
    dc:description        """Chronogram""" ;
    foaf:maker            [ foaf:name "The Mazurka Project" ] ; # FIXME could give plugin author's URI here
    dc:rights             """2006 Craig Stuart Sapp""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mzchronogram" ;
    vamp:vamp_API_version vamp:api_version_1 ;
    owl:versionInfo       "200605270" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:mzchronogram_param_verticalperiod ;
    vamp:parameter   plugbase:mzchronogram_param_frequency ;
    vamp:parameter   plugbase:mzchronogram_param_chroma ;
    vamp:parameter   plugbase:mzchronogram_param_octave ;
    vamp:parameter   plugbase:mzchronogram_param_channelview ;
    vamp:parameter   plugbase:mzchronogram_param_sensitivity ;

    vamp:output      plugbase:mzchronogram_output_ ;
    .
plugbase:mzchronogram_param_verticalperiod a  vamp:QuantizedParameter ;
    vamp:identifier     "verticalperiod" ;
    dc:title            "Vertical period" ;
    dc:format           "samples" ;
    vamp:min_value       1 ;
    vamp:max_value       10000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   100 ;
    vamp:value_names     ();
    .
plugbase:mzchronogram_param_frequency a  vamp:Parameter ;
    vamp:identifier     "frequency" ;
    dc:title            "or Frequency" ;
    dc:format           "Hz" ;
    vamp:min_value       0 ;
    vamp:max_value       10000 ;
    vamp:unit           "Hz"  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mzchronogram_param_chroma a  vamp:QuantizedParameter ;
    vamp:identifier     "chroma" ;
    dc:title            "or Chroma" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       12 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   12 ;
    vamp:value_names     ( "C" "C#" "D" "D#" "E" "F" "F#" "G" "G#" "A" "A#" "B" "");
    .
plugbase:mzchronogram_param_octave a  vamp:QuantizedParameter ;
    vamp:identifier     "octave" ;
    dc:title            "+ Octave" ;
    dc:format           "" ;
    vamp:min_value       -1 ;
    vamp:max_value       9 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ( "-1" "0" "1" "2" "3" "4" "5" "6" "7" "8" "9");
    .
plugbase:mzchronogram_param_channelview a  vamp:QuantizedParameter ;
    vamp:identifier     "channelview" ;
    dc:title            "Channel view" ;
    dc:format           "" ;
    vamp:min_value       -2 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   -2 ;
    vamp:value_names     ( "stereo" "stereo difference" "left channel" "right channel");
    .
plugbase:mzchronogram_param_sensitivity a  vamp:Parameter ;
    vamp:identifier     "sensitivity" ;
    dc:title            "Sensitivity" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mzchronogram_output_ a  vamp:DenseOutput ;
    vamp:identifier       "" ;
    dc:title              "Chronogram" ;
    dc:description        "chronogram"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzharmonicspectrum a   vamp:Plugin ;
    dc:title              "Harmonic Spectrogram" ;
    vamp:name             "Harmonic Spectrogram" ;
    dc:description        """Harmonic Spectrogram""" ;
    foaf:maker            [ foaf:name "The Mazurka Project" ] ; # FIXME could give plugin author's URI here
    dc:rights             """2006 Craig Stuart Sapp""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mzharmonicspectrum" ;
    vamp:vamp_API_version vamp:api_version_1 ;
    owl:versionInfo       "200606190" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:mzharmonicspectrum_param_windowsamples ;
    vamp:parameter   plugbase:mzharmonicspectrum_param_stepsamples ;
    vamp:parameter   plugbase:mzharmonicspectrum_param_harmonics ;
    vamp:parameter   plugbase:mzharmonicspectrum_param_minpitch ;
    vamp:parameter   plugbase:mzharmonicspectrum_param_maxpitch ;
    vamp:parameter   plugbase:mzharmonicspectrum_param_method ;
    vamp:parameter   plugbase:mzharmonicspectrum_param_compress ;

    vamp:output      plugbase:mzharmonicspectrum_output_spectrogram ;
    vamp:output      plugbase:mzharmonicspectrum_output_spectralpower ;
    vamp:output      plugbase:mzharmonicspectrum_output_rawpitch ;
    .
plugbase:mzharmonicspectrum_param_windowsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "windowsamples" ;
    dc:title            "Window size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       10000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   1500 ;
    vamp:value_names     ();
    .
plugbase:mzharmonicspectrum_param_stepsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "stepsamples" ;
    dc:title            "Step size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       30000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   512 ;
    vamp:value_names     ();
    .
plugbase:mzharmonicspectrum_param_harmonics a  vamp:QuantizedParameter ;
    vamp:identifier     "harmonics" ;
    dc:title            "Harmonics" ;
    dc:format           "" ;
    vamp:min_value       2 ;
    vamp:max_value       20 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   5 ;
    vamp:value_names     ();
    .
plugbase:mzharmonicspectrum_param_minpitch a  vamp:QuantizedParameter ;
    vamp:identifier     "minpitch" ;
    dc:title            "Min pitch" ;
    dc:format           "MIDI data" ;
    vamp:min_value       0 ;
    vamp:max_value       127 ;
    vamp:unit           "MIDI data" ;
    vamp:quantize_step   1  ;
    vamp:default_value   36 ;
    vamp:value_names
    .
plugbase:mzharmonicspectrum_param_maxpitch a  vamp:QuantizedParameter ;
    vamp:identifier     "maxpitch" ;
    dc:title            "Max pitch" ;
    dc:format           "MIDI data" ;
    vamp:min_value       0 ;
    vamp:max_value       127 ;
    vamp:unit           "MIDI data" ;
    vamp:quantize_step   1  ;
    vamp:default_value   84 ;
    vamp:value_names
    .
plugbase:mzharmonicspectrum_param_method a  vamp:QuantizedParameter ;
    vamp:identifier     "method" ;
    dc:title            "Method" ;
    dc:format           "" ;
    vamp:min_value       1 ;
    vamp:max_value       3 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   1 ;
    vamp:value_names     ( "Magnitude Product" "Magnitude Summation" "Complex Summation");
    .
plugbase:mzharmonicspectrum_param_compress a  vamp:QuantizedParameter ;
    vamp:identifier     "compress" ;
    dc:title            "Compress range" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   1 ;
    vamp:value_names     ( "no" "yes");
    .
plugbase:mzharmonicspectrum_output_spectrogram a  vamp:DenseOutput ;
    vamp:identifier       "spectrogram" ;
    dc:title              "Spectrogram" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "bin" ;
    a                 vamp:KnownExtentsOutput ;
    vamp:min_value    0  ;
    vamp:max_value    1  ;
    vamp:bin_count        512 ;
    vamp:bin_names        ( "0:1" "1:4" "2:7" "3:9" "4:12" "5:15" "6:17" "7:20" "8:23" "9:26" "10:28" "11:31" "12:34" "13:36" "14:39" "15:42" "16:44" "17:47" "18:50" "19:52" "20:55" "21:58" "22:61" "23:63" "24:66" "25:69" "26:71" "27:74" "28:77" "29:79" "30:82" "31:85" "32:87" "33:90" "34:93" "35:96" "36:98" "37:101" "38:104" "39:106" "40:109" "41:112" "42:114" "43:117" "44:120" "45:122" "46:125" "47:128" "48:131" "49:133" "50:136" "51:139" "52:141" "53:144" "54:147" "55:149" "56:152" "57:155" "58:157" "59:160" "60:163" "61:166" "62:168" "63:171" "64:174" "65:176" "66:179" "67:182" "68:184" "69:187" "70:190" "71:192" "72:195" "73:198" "74:201" "75:203" "76:206" "77:209" "78:211" "79:214" "80:217" "81:219" "82:222" "83:225" "84:227" "85:230" "86:233" "87:236" "88:238" "89:241" "90:244" "91:246" "92:249" "93:252" "94:254" "95:257" "96:260" "97:262" "98:265" "99:268" "100:271" "101:273" "102:276" "103:279" "104:281" "105:284" "106:287" "107:289" "108:292" "109:295" "110:297" "111:300" "112:303" "113:306" "114:308" "115:311" "116:314" "117:316" "118:319" "119:322" "120:324" "121:327" "122:330" "123:332" "124:335" "125:338" "126:340" "127:343" "128:346" "129:349" "130:351" "131:354" "132:357" "133:359" "134:362" "135:365" "136:367" "137:370" "138:373" "139:375" "140:378" "141:381" "142:384" "143:386" "144:389" "145:392" "146:394" "147:397" "148:400" "149:402" "150:405" "151:408" "152:410" "153:413" "154:416" "155:419" "156:421" "157:424" "158:427" "159:429" "160:432" "161:435" "162:437" "163:440" "164:443" "165:445" "166:448" "167:451" "168:454" "169:456" "170:459" "171:462" "172:464" "173:467" "174:470" "175:472" "176:475" "177:478" "178:480" "179:483" "180:486" "181:489" "182:491" "183:494" "184:497" "185:499" "186:502" "187:505" "188:507" "189:510" "190:513" "191:515" "192:518" "193:521" "194:524" "195:526" "196:529" "197:532" "198:534" "199:537" "200:540" "201:542" "202:545" "203:548" "204:550" "205:553" "206:556" "207:559" "208:561" "209:564" "210:567" "211:569" "212:572" "213:575" "214:577" "215:580" "216:583" "217:585" "218:588" "219:591" "220:594" "221:596" "222:599" "223:602" "224:604" "225:607" "226:610" "227:612" "228:615" "229:618" "230:620" "231:623" "232:626" "233:629" "234:631" "235:634" "236:637" "237:639" "238:642" "239:645" "240:647" "241:650" "242:653" "243:655" "244:658" "245:661" "246:663" "247:666" "248:669" "249:672" "250:674" "251:677" "252:680" "253:682" "254:685" "255:688" "256:690" "257:693" "258:696" "259:698" "260:701" "261:704" "262:707" "263:709" "264:712" "265:715" "266:717" "267:720" "268:723" "269:725" "270:728" "271:731" "272:733" "273:736" "274:739" "275:742" "276:744" "277:747" "278:750" "279:752" "280:755" "281:758" "282:760" "283:763" "284:766" "285:768" "286:771" "287:774" "288:777" "289:779" "290:782" "291:785" "292:787" "293:790" "294:793" "295:795" "296:798" "297:801" "298:803" "299:806" "300:809" "301:812" "302:814" "303:817" "304:820" "305:822" "306:825" "307:828" "308:830" "309:833" "310:836" "311:838" "312:841" "313:844" "314:847" "315:849" "316:852" "317:855" "318:857" "319:860" "320:863" "321:865" "322:868" "323:871" "324:873" "325:876" "326:879" "327:882" "328:884" "329:887" "330:890" "331:892" "332:895" "333:898" "334:900" "335:903" "336:906" "337:908" "338:911" "339:914" "340:917" "341:919" "342:922" "343:925" "344:927" "345:930" "346:933" "347:935" "348:938" "349:941" "350:943" "351:946" "352:949" "353:951" "354:954" "355:957" "356:960" "357:962" "358:965" "359:968" "360:970" "361:973" "362:976" "363:978" "364:981" "365:984" "366:986" "367:989" "368:992" "369:995" "370:997" "371:1000" "372:1003" "373:1005" "374:1008" "375:1011" "376:1013" "377:1016" "378:1019" "379:1021" "380:1024" "381:1027" "382:1030" "383:1032" "384:1035" "385:1038" "386:1040" "387:1043" "388:1046" "389:1048" "390:1051" "391:1054" "392:1056" "393:1059" "394:1062" "395:1065" "396:1067" "397:1070" "398:1073" "399:1075" "400:1078" "401:1081" "402:1083" "403:1086" "404:1089" "405:1091" "406:1094" "407:1097" "408:1100" "409:1102" "410:1105" "411:1108" "412:1110" "413:1113" "414:1116" "415:1118" "416:1121" "417:1124" "418:1126" "419:1129" "420:1132" "421:1135" "422:1137" "423:1140" "424:1143" "425:1145" "426:1148" "427:1151" "428:1153" "429:1156" "430:1159" "431:1161" "432:1164" "433:1167" "434:1170" "435:1172" "436:1175" "437:1178" "438:1180" "439:1183" "440:1186" "441:1188" "442:1191" "443:1194" "444:1196" "445:1199" "446:1202" "447:1205" "448:1207" "449:1210" "450:1213" "451:1215" "452:1218" "453:1221" "454:1223" "455:1226" "456:1229" "457:1231" "458:1234" "459:1237" "460:1240" "461:1242" "462:1245" "463:1248" "464:1250" "465:1253" "466:1256" "467:1258" "468:1261" "469:1264" "470:1266" "471:1269" "472:1272" "473:1274" "474:1277" "475:1280" "476:1283" "477:1285" "478:1288" "479:1291" "480:1293" "481:1296" "482:1299" "483:1301" "484:1304" "485:1307" "486:1309" "487:1312" "488:1315" "489:1318" "490:1320" "491:1323" "492:1326" "493:1328" "494:1331" "495:1334" "496:1336" "497:1339" "498:1342" "499:1344" "500:1347" "501:1350" "502:1353" "503:1355" "504:1358" "505:1361" "506:1363" "507:1366" "508:1369" "509:1371" "510:1374" "511:1377");
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzharmonicspectrum_output_spectralpower a  vamp:DenseOutput ;
    vamp:identifier       "spectralpower" ;
    dc:title              "Spectral power" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        1 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzharmonicspectrum_output_rawpitch a  vamp:DenseOutput ;
    vamp:identifier       "rawpitch" ;
    dc:title              "HS raw pitch estimate" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        1 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mznevermore a   vamp:Plugin ;
    dc:title              "Nevermore Spectrogram" ;
    vamp:name             "Nevermore Spectrogram" ;
    dc:description        """Nevermore Spectrogram""" ;
    foaf:maker            [ foaf:name "The Mazurka Project" ] ; # FIXME could give plugin author's URI here
    dc:rights             """2006 Craig Stuart Sapp""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mznevermore" ;
    vamp:vamp_API_version vamp:api_version_1 ;
    owl:versionInfo       "200606200" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:mznevermore_param_windowsamples ;
    vamp:parameter   plugbase:mznevermore_param_transformsamples ;
    vamp:parameter   plugbase:mznevermore_param_stepsamples ;
    vamp:parameter   plugbase:mznevermore_param_minbin ;
    vamp:parameter   plugbase:mznevermore_param_minfreq ;
    vamp:parameter   plugbase:mznevermore_param_maxbin ;
    vamp:parameter   plugbase:mznevermore_param_maxfreq ;
    vamp:parameter   plugbase:mznevermore_param_compress ;
    vamp:parameter   plugbase:mznevermore_param_windowtype ;
    vamp:parameter   plugbase:mznevermore_param_scale ;

    vamp:output      plugbase:mznevermore_output_spectrogram ;
    .
plugbase:mznevermore_param_windowsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "windowsamples" ;
    dc:title            "Window size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       10000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   1500 ;
    vamp:value_names     ();
    .
plugbase:mznevermore_param_transformsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "transformsamples" ;
    dc:title            "Transform size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       30000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   2048 ;
    vamp:value_names     ();
    .
plugbase:mznevermore_param_stepsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "stepsamples" ;
    dc:title            "Step size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       30000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   512 ;
    vamp:value_names     ();
    .
plugbase:mznevermore_param_minbin a  vamp:QuantizedParameter ;
    vamp:identifier     "minbin" ;
    dc:title            "Min spectral bin" ;
    dc:format           "bin" ;
    vamp:min_value       0 ;
    vamp:max_value       30000 ;
    vamp:unit           "bin" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mznevermore_param_minfreq a  vamp:Parameter ;
    vamp:identifier     "minfreq" ;
    dc:title            "         or in Hz:" ;
    dc:format           "Hz" ;
    vamp:min_value       0 ;
    vamp:max_value       24000 ;
    vamp:unit           "Hz"  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mznevermore_param_maxbin a  vamp:QuantizedParameter ;
    vamp:identifier     "maxbin" ;
    dc:title            "Max spectral bin" ;
    dc:format           "bin" ;
    vamp:min_value       0 ;
    vamp:max_value       30000 ;
    vamp:unit           "bin" ;
    vamp:quantize_step   1  ;
    vamp:default_value   2048 ;
    vamp:value_names     ();
    .
plugbase:mznevermore_param_maxfreq a  vamp:Parameter ;
    vamp:identifier     "maxfreq" ;
    dc:title            "         or in Hz:" ;
    dc:format           "Hz" ;
    vamp:min_value       0 ;
    vamp:max_value       24000 ;
    vamp:unit           "Hz"  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mznevermore_param_compress a  vamp:QuantizedParameter ;
    vamp:identifier     "compress" ;
    dc:title            "Compress range" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   1 ;
    vamp:value_names     ( "no" "yes");
    .
plugbase:mznevermore_param_windowtype a  vamp:QuantizedParameter ;
    vamp:identifier     "windowtype" ;
    dc:title            "Window type" ;
    dc:format           "" ;
    vamp:min_value       1 ;
    vamp:max_value       5 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   2 ;
    vamp:value_names     ( "Rectangular" "Hann" "Blackman" "BlackmanHarris4_92" "Triangular");
    .
plugbase:mznevermore_param_scale a  vamp:QuantizedParameter ;
    vamp:identifier     "scale" ;
    dc:title            "Frequency scale" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ( "Hertz" "Interval");
    .
plugbase:mznevermore_output_spectrogram a  vamp:DenseOutput ;
    vamp:identifier       "spectrogram" ;
    dc:title              "Spectrogram" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "bin" ;
    vamp:bin_count        512 ;
    vamp:bin_names        ( "0:22" "1:65" "2:108" "3:151" "4:194" "5:237" "6:280" "7:323" "8:366" "9:409" "10:452" "11:495" "12:538" "13:581" "14:624" "15:668" "16:711" "17:754" "18:797" "19:840" "20:883" "21:926" "22:969" "23:1012" "24:1055" "25:1098" "26:1141" "27:1184" "28:1227" "29:1270" "30:1314" "31:1357" "32:1400" "33:1443" "34:1486" "35:1529" "36:1572" "37:1615" "38:1658" "39:1701" "40:1744" "41:1787" "42:1830" "43:1873" "44:1916" "45:1960" "46:2003" "47:2046" "48:2089" "49:2132" "50:2175" "51:2218" "52:2261" "53:2304" "54:2347" "55:2390" "56:2433" "57:2476" "58:2519" "59:2562" "60:2606" "61:2649" "62:2692" "63:2735" "64:2778" "65:2821" "66:2864" "67:2907" "68:2950" "69:2993" "70:3036" "71:3079" "72:3122" "73:3165" "74:3208" "75:3252" "76:3295" "77:3338" "78:3381" "79:3424" "80:3467" "81:3510" "82:3553" "83:3596" "84:3639" "85:3682" "86:3725" "87:3768" "88:3811" "89:3854" "90:3898" "91:3941" "92:3984" "93:4027" "94:4070" "95:4113" "96:4156" "97:4199" "98:4242" "99:4285" "100:4328" "101:4371" "102:4414" "103:4457" "104:4500" "105:4544" "106:4587" "107:4630" "108:4673" "109:4716" "110:4759" "111:4802" "112:4845" "113:4888" "114:4931" "115:4974" "116:5017" "117:5060" "118:5103" "119:5146" "120:5190" "121:5233" "122:5276" "123:5319" "124:5362" "125:5405" "126:5448" "127:5491" "128:5534" "129:5577" "130:5620" "131:5663" "132:5706" "133:5749" "134:5792" "135:5835" "136:5879" "137:5922" "138:5965" "139:6008" "140:6051" "141:6094" "142:6137" "143:6180" "144:6223" "145:6266" "146:6309" "147:6352" "148:6395" "149:6438" "150:6481" "151:6525" "152:6568" "153:6611" "154:6654" "155:6697" "156:6740" "157:6783" "158:6826" "159:6869" "160:6912" "161:6955" "162:6998" "163:7041" "164:7084" "165:7127" "166:7171" "167:7214" "168:7257" "169:7300" "170:7343" "171:7386" "172:7429" "173:7472" "174:7515" "175:7558" "176:7601" "177:7644" "178:7687" "179:7730" "180:7773" "181:7817" "182:7860" "183:7903" "184:7946" "185:7989" "186:8032" "187:8075" "188:8118" "189:8161" "190:8204" "191:8247" "192:8290" "193:8333" "194:8376" "195:8419" "196:8463" "197:8506" "198:8549" "199:8592" "200:8635" "201:8678" "202:8721" "203:8764" "204:8807" "205:8850" "206:8893" "207:8936" "208:8979" "209:9022" "210:9065" "211:9109" "212:9152" "213:9195" "214:9238" "215:9281" "216:9324" "217:9367" "218:9410" "219:9453" "220:9496" "221:9539" "222:9582" "223:9625" "224:9668" "225:9711" "226:9755" "227:9798" "228:9841" "229:9884" "230:9927" "231:9970" "232:10013" "233:10056" "234:10099" "235:10142" "236:10185" "237:10228" "238:10271" "239:10314" "240:10357" "241:10401" "242:10444" "243:10487" "244:10530" "245:10573" "246:10616" "247:10659" "248:10702" "249:10745" "250:10788" "251:10831" "252:10874" "253:10917" "254:10960" "255:11003" "256:11047" "257:11090" "258:11133" "259:11176" "260:11219" "261:11262" "262:11305" "263:11348" "264:11391" "265:11434" "266:11477" "267:11520" "268:11563" "269:11606" "270:11649" "271:11693" "272:11736" "273:11779" "274:11822" "275:11865" "276:11908" "277:11951" "278:11994" "279:12037" "280:12080" "281:12123" "282:12166" "283:12209" "284:12252" "285:12295" "286:12339" "287:12382" "288:12425" "289:12468" "290:12511" "291:12554" "292:12597" "293:12640" "294:12683" "295:12726" "296:12769" "297:12812" "298:12855" "299:12898" "300:12941" "301:12985" "302:13028" "303:13071" "304:13114" "305:13157" "306:13200" "307:13243" "308:13286" "309:13329" "310:13372" "311:13415" "312:13458" "313:13501" "314:13544" "315:13587" "316:13631" "317:13674" "318:13717" "319:13760" "320:13803" "321:13846" "322:13889" "323:13932" "324:13975" "325:14018" "326:14061" "327:14104" "328:14147" "329:14190" "330:14233" "331:14277" "332:14320" "333:14363" "334:14406" "335:14449" "336:14492" "337:14535" "338:14578" "339:14621" "340:14664" "341:14707" "342:14750" "343:14793" "344:14836" "345:14879" "346:14923" "347:14966" "348:15009" "349:15052" "350:15095" "351:15138" "352:15181" "353:15224" "354:15267" "355:15310" "356:15353" "357:15396" "358:15439" "359:15482" "360:15525" "361:15569" "362:15612" "363:15655" "364:15698" "365:15741" "366:15784" "367:15827" "368:15870" "369:15913" "370:15956" "371:15999" "372:16042" "373:16085" "374:16128" "375:16171" "376:16215" "377:16258" "378:16301" "379:16344" "380:16387" "381:16430" "382:16473" "383:16516" "384:16559" "385:16602" "386:16645" "387:16688" "388:16731" "389:16774" "390:16817" "391:16860" "392:16904" "393:16947" "394:16990" "395:17033" "396:17076" "397:17119" "398:17162" "399:17205" "400:17248" "401:17291" "402:17334" "403:17377" "404:17420" "405:17463" "406:17506" "407:17550" "408:17593" "409:17636" "410:17679" "411:17722" "412:17765" "413:17808" "414:17851" "415:17894" "416:17937" "417:17980" "418:18023" "419:18066" "420:18109" "421:18152" "422:18196" "423:18239" "424:18282" "425:18325" "426:18368" "427:18411" "428:18454" "429:18497" "430:18540" "431:18583" "432:18626" "433:18669" "434:18712" "435:18755" "436:18798" "437:18842" "438:18885" "439:18928" "440:18971" "441:19014" "442:19057" "443:19100" "444:19143" "445:19186" "446:19229" "447:19272" "448:19315" "449:19358" "450:19401" "451:19444" "452:19488" "453:19531" "454:19574" "455:19617" "456:19660" "457:19703" "458:19746" "459:19789" "460:19832" "461:19875" "462:19918" "463:19961" "464:20004" "465:20047" "466:20090" "467:20134" "468:20177" "469:20220" "470:20263" "471:20306" "472:20349" "473:20392" "474:20435" "475:20478" "476:20521" "477:20564" "478:20607" "479:20650" "480:20693" "481:20736" "482:20780" "483:20823" "484:20866" "485:20909" "486:20952" "487:20995" "488:21038" "489:21081" "490:21124" "491:21167" "492:21210" "493:21253" "494:21296" "495:21339" "496:21382" "497:21426" "498:21469" "499:21512" "500:21555" "501:21598" "502:21641" "503:21684" "504:21727" "505:21770" "506:21813" "507:21856" "508:21899" "509:21942" "510:21985" "511:22028");
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzpowercurve a   vamp:Plugin ;
    dc:title              "Power Curve" ;
    vamp:name             "Power Curve" ;
    dc:description        """Power Curve""" ;
    foaf:maker            [ foaf:name "The Mazurka Project" ] ; # FIXME could give plugin author's URI here
    dc:rights             """2006 Craig Stuart Sapp""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mzpowercurve" ;
    vamp:vamp_API_version vamp:api_version_1 ;
    owl:versionInfo       "200607100" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:mzpowercurve_param_windowsize ;
    vamp:parameter   plugbase:mzpowercurve_param_hopsize ;
    vamp:parameter   plugbase:mzpowercurve_param_window ;
    vamp:parameter   plugbase:mzpowercurve_param_smoothingfactor ;
    vamp:parameter   plugbase:mzpowercurve_param_filtermethod ;

    vamp:output      plugbase:mzpowercurve_output_rawpower ;
    vamp:output      plugbase:mzpowercurve_output_smoothpower ;
    vamp:output      plugbase:mzpowercurve_output_smoothpowerslope ;
    vamp:output      plugbase:mzpowercurve_output_powerslopeproduct ;
    .
plugbase:mzpowercurve_param_windowsize a  vamp:Parameter ;
    vamp:identifier     "windowsize" ;
    dc:title            "Window size" ;
    dc:format           "ms" ;
    vamp:min_value       10 ;
    vamp:max_value       10000 ;
    vamp:unit           "ms"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:mzpowercurve_param_hopsize a  vamp:Parameter ;
    vamp:identifier     "hopsize" ;
    dc:title            "Window hop size" ;
    dc:format           "ms" ;
    vamp:min_value       1 ;
    vamp:max_value       10000 ;
    vamp:unit           "ms"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:mzpowercurve_param_window a  vamp:QuantizedParameter ;
    vamp:identifier     "window" ;
    dc:title            "Weighting window" ;
    dc:format           "" ;
    vamp:min_value       1 ;
    vamp:max_value       5 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   1 ;
    vamp:value_names     ( "Rectangular" "Hann" "Blackman" "BlackmanHarris4_92" "Triangular");
    .
plugbase:mzpowercurve_param_smoothingfactor a  vamp:Parameter ;
    vamp:identifier     "smoothingfactor" ;
    dc:title            "Smoothing
  (outputs 2-4)" ;
    dc:format           "" ;
    vamp:min_value       -1 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.2 ;
    vamp:value_names     ();
    .
plugbase:mzpowercurve_param_filtermethod a  vamp:QuantizedParameter ;
    vamp:identifier     "filtermethod" ;
    dc:title            "Filter method
  (outputs 2-4)" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       2 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ( "Symmetric" "Forward" "Reverse");
    .
plugbase:mzpowercurve_output_rawpower a  vamp:SparseOutput ;
    vamp:identifier       "rawpower" ;
    dc:title              "Raw Power" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "dB" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzpowercurve_output_smoothpower a  vamp:SparseOutput ;
    vamp:identifier       "smoothpower" ;
    dc:title              "Smoothed Power" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "dB" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzpowercurve_output_smoothpowerslope a  vamp:SparseOutput ;
    vamp:identifier       "smoothpowerslope" ;
    dc:title              "Smoothed Power Slope" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "dB slope" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzpowercurve_output_powerslopeproduct a  vamp:SparseOutput ;
    vamp:identifier       "powerslopeproduct" ;
    dc:title              "Scaled Power Slope" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "dB slope" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralflux a   vamp:Plugin ;
    dc:title              "Spectral Flux" ;
    vamp:name             "Spectral Flux" ;
    dc:description        """Spectral Flux""" ;
    foaf:maker            [ foaf:name "The Mazurka Project" ] ; # FIXME could give plugin author's URI here
    dc:rights             """2006 Craig Stuart Sapp""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mzspectralflux" ;
    vamp:vamp_API_version vamp:api_version_1 ;
    owl:versionInfo       "200612280" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:mzspectralflux_param_windowsamples ;
    vamp:parameter   plugbase:mzspectralflux_param_stepsamples ;
    vamp:parameter   plugbase:mzspectralflux_param_fluxtype ;
    vamp:parameter   plugbase:mzspectralflux_param_smooth ;
    vamp:parameter   plugbase:mzspectralflux_param_pnorm ;
    vamp:parameter   plugbase:mzspectralflux_param_spectrum ;
    vamp:parameter   plugbase:mzspectralflux_param_delta ;
    vamp:parameter   plugbase:mzspectralflux_param_alpha ;

    vamp:output      plugbase:mzspectralflux_output_spectrum ;
    vamp:output      plugbase:mzspectralflux_output_spectrumderivative ;
    vamp:output      plugbase:mzspectralflux_output_rawspectralflux ;
    vamp:output      plugbase:mzspectralflux_output_scaledspectralflux ;
    vamp:output      plugbase:mzspectralflux_output_thresholdfunction ;
    vamp:output      plugbase:mzspectralflux_output_meanfunction ;
    vamp:output      plugbase:mzspectralflux_output_spectralfluxonsets ;
    .
plugbase:mzspectralflux_param_windowsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "windowsamples" ;
    dc:title            "Window Size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       10000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   2048 ;
    vamp:value_names     ();
    .
plugbase:mzspectralflux_param_stepsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "stepsamples" ;
    dc:title            "Step Size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       30000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   441 ;
    vamp:value_names     ();
    .
plugbase:mzspectralflux_param_fluxtype a  vamp:QuantizedParameter ;
    vamp:identifier     "fluxtype" ;
    dc:title            "Flux Type" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       8 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   1 ;
    vamp:value_names     ( "Total Flux" "Positive Flux" "Negative Flux" "Difference Flux" "Composite Flux" "Product Flux" "Angular Flux" "Cosine Flux" "Schwartz Flux");
    .
plugbase:mzspectralflux_param_smooth a  vamp:Parameter ;
    vamp:identifier     "smooth" ;
    dc:title            "Spectral
Smoothing" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mzspectralflux_param_pnorm a  vamp:Parameter ;
    vamp:identifier     "pnorm" ;
    dc:title            "Norm Order" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           ""  ;
    vamp:default_value   1 ;
    vamp:value_names     ();
    .
plugbase:mzspectralflux_param_spectrum a  vamp:QuantizedParameter ;
    vamp:identifier     "spectrum" ;
    dc:title            "Magnitude
Spectrum" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       3 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   3 ;
    vamp:value_names     ( "DFT" "Low DFT" "High DFT" "MIDI");
    .
plugbase:mzspectralflux_param_delta a  vamp:Parameter ;
    vamp:identifier     "delta" ;
    dc:title            "Local Mean
Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           ""  ;
    vamp:default_value   0.45 ;
    vamp:value_names     ();
    .
plugbase:mzspectralflux_param_alpha a  vamp:Parameter ;
    vamp:identifier     "alpha" ;
    dc:title            "Exponential
Decay Factor" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       0.999 ;
    vamp:unit           ""  ;
    vamp:default_value   0.9 ;
    vamp:value_names     ();
    .
plugbase:mzspectralflux_output_spectrum a  vamp:DenseOutput ;
    vamp:identifier       "spectrum" ;
    dc:title              "Basis Spectrum" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "bin" ;
    vamp:bin_count        1000 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralflux_output_spectrumderivative a  vamp:DenseOutput ;
    vamp:identifier       "spectrumderivative" ;
    dc:title              "Spectrum Derivative" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "bin" ;
    vamp:bin_count        1000 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralflux_output_rawspectralflux a  vamp:SparseOutput ;
    vamp:identifier       "rawspectralflux" ;
    dc:title              "Raw Spectral Flux Function" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "raw" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralflux_output_scaledspectralflux a  vamp:SparseOutput ;
    vamp:identifier       "scaledspectralflux" ;
    dc:title              "Scaled Spectral Flux Function" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "scaled" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralflux_output_thresholdfunction a  vamp:SparseOutput ;
    vamp:identifier       "thresholdfunction" ;
    dc:title              "Exponential Decay Threshold" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "scaled" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralflux_output_meanfunction a  vamp:SparseOutput ;
    vamp:identifier       "meanfunction" ;
    dc:title              "Local Mean Threshold" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "scaled" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralflux_output_spectralfluxonsets a  vamp:SparseOutput ;
    vamp:identifier       "spectralfluxonsets" ;
    dc:title              "Onset Times" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralreflux a   vamp:Plugin ;
    dc:title              "Spectral Reflux" ;
    vamp:name             "Spectral Reflux" ;
    dc:description        """Spectral Reflux""" ;
    foaf:maker            [ foaf:name "The Mazurka Project" ] ; # FIXME could give plugin author's URI here
    dc:rights             """2006 Craig Stuart Sapp""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mzspectralreflux" ;
    vamp:vamp_API_version vamp:api_version_1 ;
    owl:versionInfo       "200701110" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:mzspectralreflux_param_windowsamples ;
    vamp:parameter   plugbase:mzspectralreflux_param_stepsamples ;
    vamp:parameter   plugbase:mzspectralreflux_param_recordingtype ;
    vamp:parameter   plugbase:mzspectralreflux_param_delta ;
    vamp:parameter   plugbase:mzspectralreflux_param_alpha2 ;

    vamp:output      plugbase:mzspectralreflux_output_scaledspectralflux ;
    vamp:output      plugbase:mzspectralreflux_output_spectralrefluxonsets ;
    .
plugbase:mzspectralreflux_param_windowsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "windowsamples" ;
    dc:title            "Window Size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       10000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   2048 ;
    vamp:value_names     ();
    .
plugbase:mzspectralreflux_param_stepsamples a  vamp:QuantizedParameter ;
    vamp:identifier     "stepsamples" ;
    dc:title            "Step Size" ;
    dc:format           "samples" ;
    vamp:min_value       2 ;
    vamp:max_value       30000 ;
    vamp:unit           "samples" ;
    vamp:quantize_step   1  ;
    vamp:default_value   441 ;
    vamp:value_names     ();
    .
plugbase:mzspectralreflux_param_recordingtype a  vamp:QuantizedParameter ;
    vamp:identifier     "recordingtype" ;
    dc:title            "Historic
Recording" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mzspectralreflux_param_delta a  vamp:Parameter ;
    vamp:identifier     "delta" ;
    dc:title            "Local Mean
Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           ""  ;
    vamp:default_value   0.2 ;
    vamp:value_names     ();
    .
plugbase:mzspectralreflux_param_alpha2 a  vamp:Parameter ;
    vamp:identifier     "alpha2" ;
    dc:title            "Exponential
Decay Factor" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       0.999 ;
    vamp:unit           ""  ;
    vamp:default_value   0.9 ;
    vamp:value_names     ();
    .
plugbase:mzspectralreflux_output_scaledspectralflux a  vamp:SparseOutput ;
    vamp:identifier       "scaledspectralflux" ;
    dc:title              "Scaled Spectral Flux Function" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "scaled" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mzspectralreflux_output_spectralrefluxonsets a  vamp:SparseOutput ;
    vamp:identifier       "spectralrefluxonsets" ;
    dc:title              "Onset Times" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .

