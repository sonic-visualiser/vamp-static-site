@prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .
@prefix vamp:     <http://purl.org/ontology/vamp/> .
@prefix plugbase: <http://vamp-plugins.org/rdf/plugins/ofa-vamp-plugin#> .
@prefix owl:      <http://www.w3.org/2002/07/owl#> .
@prefix dc:       <http://purl.org/dc/elements/1.1/> .
@prefix af:       <http://purl.org/ontology/af/> .
@prefix foaf:     <http://xmlns.com/foaf/0.1/> .
@prefix cc:       <http://web.resource.org/cc/> .
@prefix :         <#> .

<>  a   vamp:PluginDescription ;
    foaf:maker          <x> ;
    foaf:maker          <http://www.vamp-plugins.org/doap.rdf#template-generator> ;
    foaf:primaryTopic   <http://vamp-plugins.org/rdf/plugins/ofa-vamp-plugin#ofa-vamp-plugin> .

:ofa-vamp-plugin a  vamp:PluginLibrary ;
    vamp:identifier "ofa-vamp-plugin" ; 
    vamp:available_plugin plugbase:ofa_fingerprint; 
    vamp:available_plugin plugbase:ofa_puid .

plugbase:ofa_fingerprint a   vamp:Plugin ;
    dc:title              "MusicIP Audio Fingerprinter" ;
    vamp:name             "MusicIP Audio Fingerprinter" ;
    dc:description        "Calculates an audio fingerprint using the MusicIP OFA fingerprinting library" ;
    foaf:maker            [ foaf:name "Chris Cannam, using MusicIP OFA library" ] ; # FIXME could give plugin author's URI here
#    cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "ofa_fingerprint" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "1" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output           plugbase:ofa_fingerprint_output_fingerprint ;
    .
plugbase:ofa_fingerprint_output_fingerprint a  vamp:TrackLevelOutput ;
    vamp:identifier       "fingerprint" ;
    dc:title              "Fingerprint" ;
    dc:description        "Single result containing the audio fingerprint as its label"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
    vamp:sample_type      vamp:VariableSampleRate ;
    vamp:sample_rate      44100 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:ofa_puid a   vamp:Plugin ;
    dc:title              "MusicIP PUID Lookup" ;
    vamp:name             "MusicIP PUID Lookup" ;
    dc:description        "Calculates an audio fingerprint using the MusicIP OFA fingerprinting library and uses it to look up a MusicDNS PUID" ;
    foaf:maker            [ foaf:name "Chris Cannam, using MusicIP OFA library" ] ; # FIXME could give plugin author's URI here
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "ofa_puid" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "1" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:output      plugbase:ofa_puid_output_puid ;
    .
plugbase:ofa_puid_output_puid a  vamp:TrackLevelOutput ;
    vamp:identifier       "puid" ;
    dc:title              "PUID" ;
    dc:description        "Single result containing the MusicIP online PUID for this audio track, if available"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
    vamp:sample_type      vamp:VariableSampleRate ;
    vamp:sample_rate      44100 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .

